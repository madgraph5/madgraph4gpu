#------------------------------------------------------------------------------
# Fortran references
#------------------------------------------------------------------------------

## eemumu

commit 4728b756c1fbe1ba8427f8e384a57bf24cdbc1a5
Author: Andrea Valassi <Andrea.Valassi@cern.ch>
Date:   Wed Mar 17 20:07:55 2021 +0100

https://github.com/madgraph5/madgraph4gpu/blob/4728b756c1fbe1ba8427f8e384a57bf24cdbc1a5/epoch1/gridpack/README.md

nunw 	real 	user 	sys 	MATRIX1 calls           MATRIX1 times 	MATRIX1 throughputs
1000 	2.5s 	0.8s 	0.2s 	4019, 4019 	        0.003s, 0.003s 	1.48E6/s, 1.48E6/s
10000 	11.7s 	8.4s 	1.1s 	124019, 124019 	        0.083s, 0.083s 	1.50E6/s, 1.49E6/s
100000 	80.4s 	67.2s 	7.7s 	1020019, 1020019 	0.682s, 0.676s 	1.50E5/s, 1.51E6/s

## ggttgg

commit 0e9b503e8e3b057090f1d94d468d3194fb095239
Author: Andrea Valassi <andrea.valassi@cern.ch>
Date:   Thu May 13 23:27:01 2021 +0200

    ./run.sh -cleanstart 100 1
    Now generating 100 events with random seed 1 and granularity 1
    WRITE GRIDCARD /afs/cern.ch/user/a/avalassi/GPU2020/madgraph4gpuBis/epoch1/gridpack/ggttgg/madevent
    P1_gg_ttxgg
    ...
    TOTAL MATRIX1 :    3.0558s for    12090 calls => throughput is 3.96E+03 calls/s

#------------------------------------------------------------------------------
# Latest papers/presentations
#------------------------------------------------------------------------------

## eemumu (epoch1) 
As of 24.09.2021 at 14:23

https://arxiv.org/abs/2106.12631
Date: 13 Jul 2021

CUDA/noinline
    FP precision                = DOUBLE
    EvtsPerSec[MatrixElems] (3) = ( 7.25e+08                 )  sec^-1
    EvtsPerSec[MECalcOnly] (3a) = ( 1.37e+09                 )  sec^-1

Fortran reference
    FP precision                = DOUBLE
    EvtsPerSec[MECalcOnly] (3a) = ( 1.50e+06                 )  sec^-1

C++/noinline/none
    FP precision                = DOUBLE
    EvtsPerSec[MECalcOnly] (3a) = ( 1.31e+06                 )  sec^-1

C++/noinline/512y
    FP precision                = DOUBLE
    EvtsPerSec[MECalcOnly] (3a) = ( 4.91e+06                 )  sec^-1

C++/noinline/512z
    FP precision                = DOUBLE
    EvtsPerSec[MECalcOnly] (3a) = ( 3.74e+06                 )  sec^-1

#------------------------------------------------------------------------------
# Latest baselines on itscrd70
#------------------------------------------------------------------------------

## eemumu (epoch1) 
As of 24.09.2021 at 14:23

commit 17e0a37843e571265ad59d47a1d47337b70cdc9e (origin/lto, lto)
Author: Andrea Valassi <andrea.valassi@cern.ch>
Date:   Thu Jul 22 18:41:43 2021 +0200

On itscrd70?

CUDA/noinline
    Process                     = EPOCH1_EEMUMU_CUDA [nvcc 11.4.48 (gcc 9.2.0)] [inlineHel=0]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    EvtsPerSec[MatrixElems] (3) = ( 7.212939e+08                 )  sec^-1
    EvtsPerSec[MECalcOnly] (3a) = ( 1.400295e+09                 )  sec^-1

CUDA/inline
    Process                     = EPOCH1_EEMUMU_CUDA [nvcc 11.4.48 (gcc 9.2.0)] [inlineHel=1]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    EvtsPerSec[MatrixElems] (3) = ( 6.941261e+08                 )  sec^-1
    EvtsPerSec[MECalcOnly] (3a) = ( 1.363094e+09                 )  sec^-1

C++/noinline/none [SUMMARY: 1.31E6 against Fortran reference 1.50E6]
    Process                     = EPOCH1_EEMUMU_CPP [gcc 9.2.0] [inlineHel=0]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = SCALAR ('none': ~vector[1], no SIMD)
    OMP threads / `nproc --all` = 1 / 4
    EvtsPerSec[MECalcOnly] (3a) = ( 1.318427e+06                 )  sec^-1

C++/noinline/512y
    Process                     = EPOCH1_EEMUMU_CPP [gcc 9.2.0] [inlineHel=0]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = VECTOR[4] ('512y': AVX512, 256bit) [cxtype_ref=YES]
    OMP threads / `nproc --all` = 1 / 4
    EvtsPerSec[MECalcOnly] (3a) = ( 4.942522e+06                 )  sec^-1

C++/noinline/512z
    Process                     = EPOCH1_EEMUMU_CPP [gcc 9.2.0] [inlineHel=0]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = VECTOR[8] ('512z': AVX512, 512bit) [cxtype_ref=YES]
    OMP threads / `nproc --all` = 1 / 4
    EvtsPerSec[MECalcOnly] (3a) = ( 3.565285e+06                 )  sec^-1

C++/inline/none
    Process                     = EPOCH1_EEMUMU_CPP [gcc 9.2.0] [inlineHel=1]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = SCALAR ('none': ~vector[1], no SIMD)
    OMP threads / `nproc --all` = 1 / 4
    EvtsPerSec[MECalcOnly] (3a) = ( 4.582173e+06                 )  sec^-1

C++/inline/512y
    Process                     = EPOCH1_EEMUMU_CPP [gcc 9.2.0] [inlineHel=1]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = VECTOR[4] ('512y': AVX512, 256bit) [cxtype_ref=YES]
    OMP threads / `nproc --all` = 1 / 4
    EvtsPerSec[MECalcOnly] (3a) = ( 1.082475e+07                 )  sec^-1

C++/noinline/512z
    Process                     = EPOCH1_EEMUMU_CPP [gcc 9.2.0] [inlineHel=1]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = VECTOR[8] ('512z': AVX512, 512bit) [cxtype_ref=YES]
    OMP threads / `nproc --all` = 1 / 4
    EvtsPerSec[MECalcOnly] (3a) = ( 7.769076e+06                 )  sec^-1

## ggttgg (epoch2)
As of 24.09.2021 at 14:23

commit 4b3e32859e7f36076daa0af3649f546919f732eb
Author: Andrea Valassi <andrea.valassi@cern.ch>
Date:   Tue Jun 15 11:32:09 2021 +0200

On itscrd70?

CUDA/noinline
./gcheck.exe -p 64 256 1
    FP precision               = DOUBLE (nan=0)
    EvtsPerSec[MatrixElems] (3)= ( 4.439796e+05                 )  sec^-1

C++/noinline/none [SUMMARY: 1.82E3 against Fortran reference 3.96E3]
./check.exe -p 64 256 1
    FP precision               = DOUBLE (nan=0)
    EvtsPerSec[MatrixElems] (3)= ( 1.825615e+03                 )  sec^-1

#------------------------------------------------------------------------------
# AVX512z tests on other machines
#------------------------------------------------------------------------------

commit 7bdef16135b7dd8295f873ef1cd33119e19f40a7 (ghav/cori)
Author: Andrea Valassi <andrea.valassi@cern.ch>
Date:   Fri Jul 16 11:04:38 2021 -0700

    On cori04 [CPU: Intel(R) Xeon(R) Gold 6148 CPU] [GPU: 1x Tesla V100-SXM2-16GB]:

## eemumu (epoch1) 

C++/noinline/none
    Process                     = EPOCH1_EEMUMU_CPP [gcc 10.1.0]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = SCALAR ('none': ~vector[1], no SIMD)
    OMP threads / `nproc --all` = 1 / 80
    EvtsPerSec[MECalcOnly] (3a) = ( 1.728110e+06                 )  sec^-1

C++/noinline/512y
    Process                     = EPOCH1_EEMUMU_CPP [gcc 10.1.0]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = VECTOR[4] ('512y': AVX512, 256bit) [cxtype_ref=YES]
    OMP threads / `nproc --all` = 1 / 80
    EvtsPerSec[MECalcOnly] (3a) = ( 6.926176e+06                 )  sec^-1

C++/noinline/512z
    Process                     = EPOCH1_EEMUMU_CPP [gcc 10.1.0]
    FP precision                = DOUBLE (NaN/abnormal=0, zero=0)
    Internal loops fptype_sv    = VECTOR[8] ('512z': AVX512, 512bit) [cxtype_ref=YES]
    OMP threads / `nproc --all` = 1 / 80
    EvtsPerSec[MECalcOnly] (3a) = ( 7.523325e+06                 )  sec^-1

#------------------------------------------------------------------------------
# EpochX progress
#------------------------------------------------------------------------------

#++++++++
# STEP 1
#++++++++

## eemumu

(Reminder: baseline is 7.21E8 cuda, 1.32E6 c++)

commit cce3247514baac08c7932e7026ff8ed5fc7ac7a5
Author: Andrea Valassi <andrea.valassi@cern.ch>
Date:   Thu Sep 23 19:29:10 2021 +0200

CUDA/noinline
    FP precision               = DOUBLE (nan=0)
    EvtsPerSec[MatrixElems] (3)= ( 7.495918e+08                 )  sec^-1

C++/noinline/none
    FP precision               = DOUBLE (nan=0)
    EvtsPerSec[MatrixElems] (3)= ( 8.507256e+05                 )  sec^-1

## ggttgg

(Reminder: baseline is 4.44E5 cuda, 1.83E6 c++)

commit cce3247514baac08c7932e7026ff8ed5fc7ac7a5
Author: Andrea Valassi <andrea.valassi@cern.ch>
Date:   Thu Sep 23 19:29:10 2021 +0200

CUDA/noinline
    FP precision               = DOUBLE (nan=0)
    EvtsPerSec[MatrixElems] (3)= ( 3.156392e+05                 )  sec^-1

C++/noinline/none
    FP precision               = DOUBLE (nan=0)
    EvtsPerSec[MatrixElems] (3)= ( 1.288786e+03                 )  sec^-1

#------------------------------------------------------------------------------
